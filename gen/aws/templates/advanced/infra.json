{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Metadata": {
    "DcosImageCommit": "unset",
    "TemplateGenerationDate": "unset"
  },
  "Parameters": {
    "AdminLocation": {
      "Description" : "\nOptional: Specify the IP range to whitelist for access to the admin zone. Must be a valid CIDR.",
      "Type" : "String",
      "MinLength" : "9",
      "MaxLength" : "18",
      "Default" : "0.0.0.0/0",
      "AllowedPattern" : "^([0-9]+\\.){3}[0-9]+\\/[0-9]+$",
      "ConstraintDescription" : "must be a valid CIDR."
    },
    "KeyName": {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Description": "\nSpecify your AWS EC2 Key Pair."
    },
    "Vpc": {
      "Description" : "\nExisting VPC to use. Nodes will be launched using subnets and Internet Gateway under this VPC",
      "Type": "AWS::EC2::VPC::Id"
    }
  },
    "Mappings": {
        "NATAmi": {{ nat_ami_mapping }}
    },
  "Resources": {
    "AdminSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable admin access to servers",
        "VpcId" : { "Ref" : "Vpc" },
        "SecurityGroupIngress" : [ {
          "IpProtocol" : "tcp",
          "FromPort" : "22",
          "ToPort" : "22",
          "CidrIp" : { "Ref" : "AdminLocation" }
          }, {
          "IpProtocol" : "tcp",
          "FromPort" : "80",
          "ToPort" : "80",
          "CidrIp" : { "Ref" : "AdminLocation" }
          }, {
          "IpProtocol" : "tcp",
          "FromPort" : "443",
          "ToPort" : "443",
          "CidrIp" : { "Ref" : "AdminLocation" }
        } ]
      }
    },
    "PrivateAgentSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Mesos Private Agents",
        "VpcId" : { "Ref" : "Vpc" }
      }
    },
    "MasterSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Mesos Masters",
        "VpcId" : { "Ref" : "Vpc" },
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "FromPort" : "5050", "ToPort" : "5050", "SourceSecurityGroupId" : { "Ref" : "LbSecurityGroup"} },
          { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "SourceSecurityGroupId" : { "Ref" : "LbSecurityGroup"} },
          { "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "SourceSecurityGroupId" : { "Ref" : "LbSecurityGroup"} },
          { "IpProtocol" : "tcp", "FromPort" : "8080", "ToPort" : "8080", "SourceSecurityGroupId" : { "Ref" : "LbSecurityGroup"} },
          { "IpProtocol" : "tcp", "FromPort" : "8181", "ToPort" : "8181", "SourceSecurityGroupId" : { "Ref" : "LbSecurityGroup"} },
          { "IpProtocol" : "tcp", "FromPort" : "2181", "ToPort" : "2181", "SourceSecurityGroupId" : { "Ref" : "LbSecurityGroup"} }
        ]
      }
    },
    "MasterToPrivateAgentIngress" : {
      "Type" : "AWS::EC2::SecurityGroupIngress",
      "Properties" : {
        "GroupId" : { "Ref" : "PrivateAgentSecurityGroup" },
        "IpProtocol" : "-1",
        "FromPort" : "0",
        "ToPort" : "65535",
        "SourceSecurityGroupId" : { "Ref" : "MasterSecurityGroup" }
      }
    },
    "PrivateAgentToMasterIngress" : {
      "Type" : "AWS::EC2::SecurityGroupIngress",
      "Properties" : {
        "GroupId" : { "Ref" : "MasterSecurityGroup" },
        "IpProtocol" : "-1",
        "FromPort" : "0",
        "ToPort" : "65535",
        "SourceSecurityGroupId" : { "Ref" : "PrivateAgentSecurityGroup" }
        }
    },
    "PrivateAgentToMasterLBIngress" : {
      "Type" : "AWS::EC2::SecurityGroupIngress",
      "Properties" : {
        "GroupId" : { "Ref" : "LbSecurityGroup" },
        "IpProtocol" : "tcp",
        "FromPort" : "2181",
        "ToPort" : "2181",
        "SourceSecurityGroupId" : { "Ref" : "PrivateAgentSecurityGroup" }
      }
    },
    "PrivateAgentToPrivateAgentIngress" : {
      "Type" : "AWS::EC2::SecurityGroupIngress",
      "Properties" : {
        "GroupId" : { "Ref" : "PrivateAgentSecurityGroup" },
        "IpProtocol" : "-1",
        "FromPort" : "0",
        "ToPort" : "65535",
        "SourceSecurityGroupId" : { "Ref" : "PrivateAgentSecurityGroup" }
      }
    },
    "MasterToMasterIngress" : {
      "Type" : "AWS::EC2::SecurityGroupIngress",
      "Properties" : {
        "GroupId" : { "Ref" : "MasterSecurityGroup" },
        "IpProtocol" : "-1",
        "FromPort" : "0",
        "ToPort" : "65535",
        "SourceSecurityGroupId" : { "Ref" : "MasterSecurityGroup" }
      }
    },
    "LbSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Mesos Master LB",
        "VpcId" : { "Ref" : "Vpc" }
      }
    },
    "ExhibitorS3Bucket" : {
      "Type" : "AWS::S3::Bucket",
      "DeletionPolicy" : "Retain"
    }
  },
    "Outputs" : {
        "PrivateAgentSecurityGroupId": {
            "Value" : { "Ref" : "PrivateAgentSecurityGroup" },
            "Description" : "Security group used by Mesos Private Agents"
        },
        "MasterSecurityGroupId": {
            "Value" : { "Ref" : "MasterSecurityGroup" },
            "Description" : "Security group used by Mesos Masters"
        },
        "LbSecurityGroupId": {
            "Value" : { "Ref" : "LbSecurityGroup" },
            "Description" : "Security group used by Mesos Load Balancers"
        },
        "AdminSecurityGroupId": {
            "Value" : { "Ref" : "AdminSecurityGroup" },
            "Description" : "Security group used for Mesos Admin UI"
        },
        "ExhibitorS3BucketId": {
          "Value" : { "Ref" : "ExhibitorS3Bucket" },
          "Description": "S3 bucket name for use by Exhibitor"
        }
    }
}
